// Core Imports
const express = require("express");
const AWS = require("aws-sdk");

// Custom Imports
const {
  INVALID_INPUT_RESPONSE,
  TRY_CATCH_ERROR_RESPONSE,
  SUCCESS_RESPONSE,
} = require("./../../utils");
// const upload = require("./../../file-upload");
// const RESPONSE_TYPES = require("./../../response-types");
const CONFIG = require("./../../config");

const router = express.Router();

AWS.config.update({
  secretAccessKey: CONFIG.AWS_SECRET_KEY,
  accessKeyId: CONFIG.AWS_ACCESS_KEY,
  region: CONFIG.AWS_S3_BUCKET_REGION,
});
// const singleUpload = upload.single("file");

// router.post("/upload-file", (req, res, next) => {
//   if (!req.file) {
//     // this "req.file" is automated generated by multer package, and by now, file is uploaded in system and this "file" object contains file path in "path" veriable inside it.
//     return res.status(RESPONSE_TYPES.INVALID_INPUT.statusCode).json({
//       message: RESPONSE_TYPES.INVALID_INPUT.message,
//       errors: {
//         file: "this is required.",
//         oldFilePath:
//           "provide old file path, this will save storage space by deleting that file",
//       },
//       statusCode: RESPONSE_TYPES.INVALID_INPUT.statusCode,
//     });
//   } else {
//     if (req.body.oldFilePath) {
//       UTILS.removeImage(req.body.oldFilePath);
//     }
//     singleUpload(req, res, (err) => {
//       return res.status(RESPONSE_TYPES.SUCCESS.statusCode).json({
//         message: RESPONSE_TYPES.SUCCESS.message,
//         statusCode: RESPONSE_TYPES.SUCCESS.statusCode,
//         file: {
//           url: req.file.location,
//         },
//       });
//     });
//   }
// });

router.post("/upload-file-base64", async (req, res, next) => {
  try {
    const S3 = new AWS.S3();
    const { base64ImageData, imageOrderNo } = req.body;
    console.log({ base64ImageData });
    let errors = [];
    if (!base64ImageData) {
      errors.push({
        key: "base64ImageData",
        message: "base64ImageData is required!",
      });
    }
    if (!imageOrderNo) {
      errors.push({
        key: "imageOrderNo",
        message: "imageOrderNo is required!",
      });
    }
    if (errors.length > 0) {
      return INVALID_INPUT_RESPONSE(res, errors);
    }
    const base64Data = new Buffer.from(
      base64ImageData.replace(/^data:image\/\w+;base64,/, ""),
      "base64"
    );

    const type = base64ImageData.split(";")[0].split("/")[1];

    const fileName = Date.now().toString();

    const params = {
      Bucket: CONFIG.AWS_S3_BUCKET_NAME,
      Key: `${fileName}.${type}`, // type is not required
      Body: base64Data,
      ACL: "public-read",
      ContentEncoding: "base64", // required
      ContentType: `image/${type}`, // required
    };

    const { Location, Key } = await S3.upload(params).promise();
    console.log("file-upload-routes === post(/upload-file-base64) == res =  ", {
      Location,
      Key,
    });
    const data = { Location, Key };

    return SUCCESS_RESPONSE(res, data);
  } catch (error) {
    return TRY_CATCH_ERROR_RESPONSE(res, { ...error });
  }
});

module.exports = router;
